클래스 상속
프로그램에서는 자식이 부모를 선택한다. extends

public class 자식클래스 extends 부모클래스{}

자바는 다중상속을 허용하지 않는다.
public class 자식클래스 extends 부모1, 부모2, 부모3 {} - 허용x
public class 자식클래스 extends 부모 implements 인터페이스1, 인터페이스2, 인터페이스3(기능은 인터페이스를 이용하여 다중상속 구현)...{} - o

1. 부모 생성자 호출
    super() 컴파일과정에서 자동 추가된다. 이것은 부모의 기본 생성자를 호출한다.
    만약 부모 클래스에 기본 생성자가 없으면 자식생성자 선언에서 컴파일 에러 발생한다.

2. 메소드 재정의 (메소드 오버라이딩)
    상속된 메소드를 자식 클래스에서 새롭게 재정의 하는 방법

    우리는 메소드 오버라이딩을 왜 쓸까?
    부모 메소드는 숨겨지고, 자식 메소드만 사용되기 때문에, 부모 메소드의 일부가 변경된다 하더라도
    중복된 내용을 자식 메소드도 가지고 있어야 한다.

    자식 메소드와 부모 메소드의 공동 작업 처리 기법을 이용하면 부모와 자식의 기능을 적절히 조율해서 사용할 수 있다.

3. final 클래스 , final 메소드

final 필드 : 초기값 설정 후 값을 변경할 수 없다.
final 클래스 : 클래스 선언시 final 를 클래스 앞에 붙이면 최종적인 클래스이므로 더 이상 상속을 할 수 없다
              부모 클래스가 될 수 없으므로 자식 클래스를 만들 수 없다.
final 메소드 : 오버라이딩 할 수 없다.

//
1. Car 클래스
   stop() 메소드를 final 선언하세요
   - 차를 멈춤 메세지 출력 후 speed를 0으로 셋팅합니다.
   speedUp() 는 호출될때마다 speed가 1씩 증가합니다.

2. SportCar 클래스
   Car 클래스를 상속합니다.
   speedUp() 기능을 호출시 10씩 증가하도록 재정의합니다.

3. CarMain 클래스
   1. Car 클래스 타입 mycar1 생성하여 speed를 3으로 셋팅하고 현재 speed 값 출력
   2. SportsCar 타입 mycar2 생성하여 speed를 50으로 셋팅하고 현재 speed 값 출력

4. proteced 접근 제한자
   public , private 접근 제한자를 사용하여 객체 외부에서 필드, 생성자, 메소드의 접근 여부를 결정했다.
   접근대상 : 필드, 생성자, 메소드
   제한 범위 : public 동일 패키지, 다른 패키지 제한 없이 모두 접근 가능
             private 내 클래스만 접근 가능
   protected 는 상속과 관련됨
   접근 대상 : 필드, 생성자, 메소드
   제한범위: 같은 패키지이거나 자식 객체만 사용(접근) 가능

5. 타입변환
   타입을 다른 타입으로 변환하는 것을 의미한다.
   클래스의 타입변환은 상속관계에서 발생한다.
   - 자동타입변환 (promotion) : 자동으로 타입변환이 일어난다

//실습
PromotionMain.java
Cat 객체를 생성하고 이것을 Animal 변수에 대입하세요.
코드로 작성해 보세요.


강제 타입 변환
자식 타입은 부모타입으로 자동 변환이 되지만,
반대로 부모타입은 자식타입으로 자동 변환이 되지 않으므로
강제로 변환 (캐스팅)연산자로 강제타입 변환 (Casting) 할 수 있다.

Parent parent = new Child(); //자동타입 변환
Child child = (Child)parent;

다형성 : 사용방법은 동일하지만 실행결과가 다양하게 나오는 성질
객체 사용 방법 동일하다는 것은 동일한 메소드를 가지고 있다는 뜻

타이어 (부모)
- 한국타이어
- 금호타이어
- 넥센

추상클래스
abstract 사전적의미 : 실체 간에 공통되는 특성을 추출한 것

추상클래스란?
객체를 생성할 수 있는 클래스 실체 클래스 (new 클래스명())
이 클래스들의 공통적인 필드나 메소드를 추출해서 선언한 클래스를 추상 클래스
추상클래스는 실체 클래스들의 부모 역할


